name: Go CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        go-version: [1.20.x, 1.19.x]
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go-version }}-

      - name: Install dependencies
        run: go mod download

      - name: Build
        run: go build -v ./...

      - name: Run tests
        run: go test -v ./...

  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.20.x

      - name: Build Linux binary
        run: |
          GOOS=linux GOARCH=amd64 go build -o myapp-linux-amd64

      - name: Build Windows binary
        run: |
          GOOS=windows GOARCH=amd64 go build -o myapp-windows-amd64.exe

      - name: Build macOS binary
        run: |
          GOOS=darwin GOARCH=amd64 go build -o myapp-macos-amd64

      - name: Archive binaries
        uses: actions/upload-artifact@v3
        with:
          name: binaries
          path: |
            myapp-linux-amd64
            myapp-windows-amd64.exe
            myapp-macos-amd64
